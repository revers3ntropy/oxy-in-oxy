export class Parser {
    tokens: List<Token>,

    def parse (tokens: List<Token>) Result<IntNode, OxyError> {
        return (new Parser { tokens }).gen_ast()
    }

    def gen_ast (self) Result<IntNode, OxyError> {
    	if self.tokens.len() != 1 {
    		return Result.err!<IntNode, OxyError>(OxyError.syntax_err(
				"Expected exactly one token",
				Interval.unknown()
			))
    	}
    	let token = self.tokens.at_raw(0)
		if token.token_type != TT_INT {
			panic("Expected integer token")
		}
		return Result.ok!<IntNode, OxyError>(new IntNode {
			value: token.value.unwrap().Int().unwrap(),
			loc: token.loc
	 	})
	}
}